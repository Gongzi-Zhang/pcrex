# @command value

# evt tree in japan output
@dir	    /chafs2/work1/apar/japanOutput/
# file name pattern use glob style, except that you should write run number as xxxx.
@pattern  prexPrompt_pass2_xxxx.???.root
@tree     evt
@cut      ErrorFlag == 0  # cut applied to tree

# reg tree in postpan output
# @dir      /chafs2/work1/apar/postpan-outputs/
# @pattern  prexPrompt_xxxx_???_regress_postpan.root
# @tree     reg
# @cut      ok_cut

# dit tree in dithering output
# @dir      /chafs2/work1/apar/DitherCorrection/
# @pattern  prexPrompt_dither_xxxx_???.root
# @pattern  prexPrompt_dither_1X_xxxx_???.root
# @tree     dit
# @cut      ErrorFlag == 0


# one run (range) per line
@runs
6344
6345-6347


@entrycuts # cut on entry number, same to $Entry in tree
2234
1234:2345
:4567
6789:


# units:
# available unit: ppm, ppb, mm, um, nm, uA, mA, nA


# variables:
#   - variable style: branch.leaf, if no leaf specified, then the first leaf
#     of specified branch will be used.
#   - '+' sign makes the specified variable to be plotted, if no '+' sign, then 
#     the specified variables will be checked, but not be plotted unless
#     there is bad data (fail the cut) in it.
# cut: 
#   - currently, there are three kinds of cut: low cut, high cut, and burplevel cut
#   - low (high) cut: how far can value below (above) the average value
#     - the average value is defined as the average value of the longest consecutive segment
#   - burplevel cut: how far current value away from the mean of previous 120 events
#     value, and the sigma value is the value of previous values.
#   - any cut can be omitted, but must be seperated by ';' even being empty

# single variable: 
#   - cut: low, high, burplevel
@solos
bcm_an_us+; 10*uA; 5*uA; 5*uA  # same to bcm_an_us.hw_sum (for evt tree), 10 (5) uA 
                               # below (above) the average value will be regarded as outlier
bcm_an_ds+; ; ; 5*uA # no low or high cut, allow 5 uA deviation from previous mean value
bcm_an_ds3;       # no cut

usl+;     # plotted variables
usr+;     # if there is only variable name, it must be ended by ';'


# comparisons: (var1, var2)
#   - seperate variables with ','
#   - cut: low, high
@comparisons


# correlations: (y_var:x_var)
#   - seperate variables with ':' y:x
#   - cut: slope_low, sloep_high
@correlations


# customized variables: (var_name: definition)
#  * supported operations: + - * / %
#  * supported functions: sqrt, pow
#  * supported constants: ?
# you can also use customized variables in comparison or correlation plots
@customs
us_dd+: (usl - usr)/2;
us_avg: sqrt(pow(usl, 2) + pow(usr, 2))/sqrt(2);

# vim: set shiftwidth=2 softtabstop=2 tabstop=2: #
