# @command value

# @dir				/lustre/expphy/volatile/halla/parity/prex-respin2/LagrangeOutput/rootfiles/
# @pattern		prexRespin2_lagrange_eigen_xxxx.???.root
# @tree				regall
# @friendtree	mul

@dir				/lustre/expphy/volatile/halla/parity/prex-respin2/japanOutput/
@pattern		prexPrompt_pass2_xxxx.???.root
@tree				mul
@friendtree	mulc
@friendtree	mulc_dit
@friendtree	mulc_dit_combo
@cut				ErrorFlag == 0

# evt tree in japan output
# @dir	    /chafs2/work1/apar/japanOutput/
# # file name pattern use glob style, except that you should write run number as xxxx.
# @tree     evt   # the main tree
# @cut      ErrorFlag == 0  # cut applied to tree
# # @friendtree   tree_name[;   root_file_pattern] # the same name pattern
# @friendtree   dit;  /chafs2/work1/apar/DitherCorrection/prexPrompt_dither_1X_xxxx_???.root 
# @friendtree   reg   # no following root file names, assume the same root file as the main tree


# one run (range) per line
@runs


# @logy     true/false


# variables:
#   - variable style: branch.leaf, if no leaf specified, then the first leaf
#     of specified branch will be used.
@solos
# variable; x-min; x-max; if no x-ranges specified, one will be choosed by the program 
# to include all values
asym_usl;
asym_usr;
asym_dsl;
asym_dsr;
asym_us_avg;
asym_us_dd;
asym_ds_avg;
asym_ds_dd;

asym_bcm_target;
asym_bcm_an_us;
asym_bcm_an_ds;
asym_bcm_an_ds3;
asym_bcm_dg_us;
asym_bcm_dg_ds;

diff_bpm1X;
diff_bpm1Y;
diff_bpm4aX;
diff_bpm4aY;
diff_bpm4eX;
diff_bpm4eY;
# diff_bpm11X;
# diff_bpm11Y;
diff_bpm12X;
diff_bpm12Y;
# diff_bpm16X;
# diff_bpm16Y;

dit_asym_usl;
dit_asym_usr;
dit_asym_dsl;
dit_asym_dsr;
dit_asym_us_avg;
dit_asym_us_dd;
dit_asym_ds_avg;
dit_asym_ds_dd;


# reg_asym_bcm_an_us;
# reg_asym_bcm_an_ds;
# reg_asym_bcm_an_ds3;
# reg_asym_bcm_dg_us;
# reg_asym_bcm_dg_ds;
# asym_bcm_an_us_bcm_an_ds; # dd

# diff_bpm1X; -50*um; 50*um;

@customs
# us_dd+: (usl - usr)/2; 
# us_avg: sqrt(pow(usl, 2) + pow(usr, 2))/sqrt(2);
# diff_bpmE: diff_bpm11X + 0.4*diff_bpm12X;

# vim: set shiftwidth=2 softtabstop=2 tabstop=2: #
