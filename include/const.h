// const and universal definitions
#ifndef CONST_H
#define CONST_H

#include <string>
#include <map>

// run infos
#define START_RUN   3000
// #define PREX_END_RUN   4980
// #define CREX_START_RUN   5000
#define END_RUN     8888
#define START_SLUG  0
#define END_SLUG    221
#define PREX_AT_START_RUN 4102
#define PREX_AT_END_RUN 4135
#define PREX_AT_START_SLUG 501
#define PREX_AT_END_SLUG 510
#define CREX_AT_START_SLUG 4000
#define CREX_AT_END_SLUG 4019
// #define ROWS      69	// number of dv in slopes
// #define COLS      5	// number of iv in slopes

// units
const double ppb = 1e-9;
const double ppm = 1e-6;
const double mm = 1e-3;
const double um = 1e-6;
const double nm = 1e-9;
const double mA = 1e-3;
const double uA = 1e-6;
const double nA = 1e-9;
const double mV = 1e-3;
const double uV = 1e-6;
const double nV = 1e-9;

std::map<std::string, const double> UNITS = {
	{"",		1},
  {"ppb", ppb},
  {"ppm", ppm},
  {"mm",  mm},
  {"um",  um},
  {"nm",  nm},
  {"mA",  mA},
  {"uA",  uA},
  {"nA",  nA},
  {"mV",  mV},
  {"uV",  uV},
  {"nV",  nV},
  {"1/mm", 1/mm},
  {"1/um", 1/um},
  {"ppm/um", ppm/um},
  {"C",   1},
};

std::vector<std::string> BURST_DV1 = {  // for runs <= 6464
	"asym_sam1",
	"asym_sam2",
	"asym_sam3",
	"asym_sam4",
	"asym_sam5",
	"asym_sam6",
	"asym_sam7",
	"asym_sam8",
	"asym_sam_15_avg",
	"asym_sam_15_dd",
	"asym_sam_37_avg",
	"asym_sam_37_dd",
	"asym_sam_26_avg",
	"asym_sam_26_dd",
	"asym_sam_48_avg",
	"asym_sam_48_dd",
	"asym_sam_13_57_dd",
	"asym_sam_15_37_dd",
	"asym_sam_24_68_dd",
	"asym_sam_26_48_dd",
	"asym_sam_1548_avg",
	"asym_sam_3748_avg",
	"asym_sam_1526_avg",
	"asym_sam_3726_avg",
	"asym_sam_15_48_dd",
	"asym_sam_37_48_dd",
	"asym_sam_15_26_dd",
	"asym_sam_37_26_dd",
	"asym_sam_1357_avg",
	"asym_sam_2468_avg",
	"asym_sam_1357_2468_dd",
	"asym_sam_12345678_avg",
	"asym_atl1",
	"asym_atl2",
	"asym_atr1",
	"asym_atr2",
	"asym_atl_avg",
	"asym_atl_dd",
	"asym_atr_avg",
	"asym_atr_dd",
	"asym_at1_avg",
	"asym_at1_dd",
	"asym_at2_avg",
	"asym_at2_dd",
	"asym_usl",
	"asym_usr",
	"asym_us_avg",
	"asym_us_dd",
};
std::vector<std::string> BURST_DV2 = {  // for runs >= 6514
	"asym_sam1",
	"asym_sam2",
	"asym_sam3",
	"asym_sam4",
	"asym_sam5",
	"asym_sam6",
	"asym_sam7",
	"asym_sam8",
	"asym_sam_15_avg",
	"asym_sam_15_dd",
	"asym_sam_37_avg",
	"asym_sam_37_dd",
	"asym_sam_26_avg",
	"asym_sam_26_dd",
	"asym_sam_48_avg",
	"asym_sam_48_dd",
	"asym_sam_13_57_dd",
	"asym_sam_15_37_dd",
	"asym_sam_24_68_dd",
	"asym_sam_26_48_dd",
	"asym_sam_1548_avg",
	"asym_sam_3748_avg",
	"asym_sam_1526_avg",
	"asym_sam_3726_avg",
	"asym_sam_15_48_dd",
	"asym_sam_37_48_dd",
	"asym_sam_15_26_dd",
	"asym_sam_37_26_dd",
	"asym_sam_1357_avg",
	"asym_sam_2468_avg",
	"asym_sam_1357_2468_dd",
	"asym_sam_12345678_avg",
	"asym_atl1",
	"asym_atl2",
	"asym_atr1",
	"asym_atr2",
	"asym_atl_avg",
	"asym_atl_dd",
	"asym_atr_avg",
	"asym_atr_dd",
	"asym_at1_avg",
	"asym_at1_dd",
	"asym_at2_avg",
	"asym_at2_dd",
  "asym_atl1r2_avg",
  "asym_atl1r2_dd",
  "asym_atr1l2_avg",
  "asym_atr1l2_dd",
  "asym_atl_dd_atr_dd_avg",
  "asym_atl_dd_atr_dd_dd",
  "asym_atl_avg_atr_avg_avg",
  "asym_atl_avg_atr_avg_dd",
	"asym_usl",
	"asym_usr",
	"asym_us_avg",
	"asym_us_dd",
};

struct _SLUGINFO {
  const char *wienflip;
  const char *ihwp;
  int arm;
};
map<int, struct _SLUGINFO> SLUGINFO = {
	{100, {"FLIP-RIGHT", "OUT",	0}	},
	{101, {"FLIP-RIGHT", "IN",	0}	},
	{102, {"FLIP-RIGHT", "OUT",	0}	},
	{103, {"FLIP-RIGHT", "IN",	0}	},
	{104, {"FLIP-RIGHT", "OUT",	0}	},
	{105, {"FLIP-RIGHT", "IN",	0}	},
	{106, {"FLIP-RIGHT", "OUT",	0}	},
	{107, {"FLIP-RIGHT", "OUT",	0}	},
	{108, {"FLIP-RIGHT", "IN",	0}	},
	{109, {"FLIP-RIGHT", "OUT",	0}	},
	{110, {"FLIP-RIGHT", "IN",	0}	},
	{111, {"FLIP-RIGHT", "OUT",	0}	},
	{112, {"FLIP-RIGHT", "IN",	0}	},
	{113, {"FLIP-RIGHT", "OUT",	0}	},
	{114, {"FLIP-RIGHT", "IN",	0}	},
	{115, {"FLIP-RIGHT", "IN",	0}	},
	{116, {"FLIP-RIGHT", "OUT",	0}	},
	{117, {"FLIP-RIGHT", "OUT",	0}	},
	{118, {"FLIP-RIGHT", "IN",	0}	},
	{119, {"FLIP-RIGHT", "OUT",	0}	},
	{120, {"FLIP-RIGHT", "IN",	0}	},
	{121, {"FLIP-RIGHT", "OUT",	0}	},
	{122, {"FLIP-RIGHT", "IN",	0}	},
	{123, {"FLIP-RIGHT", "IN",	1}	},
	{124, {"FLIP-RIGHT", "OUT",	1}	},
	{125, {"FLIP-RIGHT", "OUT",	0}	},
	{126, {"FLIP-RIGHT", "IN",	0}	},
	{127, {"FLIP-RIGHT", "OUT",	0}	},
	{128, {"FLIP-RIGHT", "IN",	0}	},
	{129, {"FLIP-RIGHT", "OUT",	0}	},
	{130, {"FLIP-RIGHT", "IN",	0}	},
	{131, {"FLIP-RIGHT", "OUT",	0}	},
	{132, {"FLIP-RIGHT", "IN",	0}	},
	{133, {"FLIP-RIGHT", "OUT",	0}	},
	{134, {"FLIP-RIGHT", "IN",	0}	},
	{135, {"FLIP-RIGHT", "OUT",	0}	},
	{136, {"FLIP-RIGHT", "IN",	0}	},
	{137, {"FLIP-RIGHT", "OUT",	0}	},
	{138, {"FLIP-LEFT",  "OUT",	0}	},
	{139, {"FLIP-LEFT",  "IN",	0}	},
	{140, {"FLIP-LEFT",  "OUT",	0}	},
	{141, {"FLIP-LEFT",  "IN",	0}	},
	{142, {"FLIP-LEFT",  "OUT",	0}	},
	{143, {"FLIP-LEFT",  "OUT",	1}	},
	{144, {"FLIP-LEFT",  "IN",	0}	},
	{145, {"FLIP-LEFT",  "OUT",	0}	},
	{146, {"FLIP-LEFT",  "IN",	0}	},
	{147, {"FLIP-LEFT",  "OUT",	0}	},
	{148, {"FLIP-LEFT",  "IN",	0}	},
	{149, {"FLIP-LEFT",  "OUT",	0}	},
	{150, {"FLIP-LEFT",  "IN",	0}	},
	{151, {"FLIP-LEFT",  "OUT",	0}	},
	{152, {"FLIP-LEFT",  "IN",	0}	},
	{153, {"FLIP-LEFT",  "OUT",	0}	},
	{154, {"FLIP-LEFT",  "IN",	0}	},
	{155, {"FLIP-LEFT",  "OUT",	0}	},
	{156, {"FLIP-LEFT",  "IN",	0}	},
	{157, {"FLIP-LEFT",  "OUT",	0}	},
	{158, {"FLIP-LEFT",  "IN",	0}	},
	{159, {"FLIP-LEFT",  "OUT",	0}	},
	{160, {"FLIP-LEFT",  "IN",	0}	},
	{161, {"FLIP-LEFT",  "OUT",	0}	},
	{162, {"FLIP-LEFT",  "IN",	0}	},
	{163, {"FLIP-LEFT",  "OUT",	0}	},
	{164, {"FLIP-LEFT",  "IN",	0}	},
	{165, {"FLIP-LEFT",  "OUT",	0}	},
	{166, {"FLIP-LEFT",  "IN",	0}	},
	{167, {"FLIP-LEFT",  "OUT",	0}	},
	{168, {"FLIP-LEFT",  "IN",	0}	},
	{169, {"FLIP-LEFT",  "OUT",	0}	},
	{170, {"FLIP-LEFT",  "IN",	0}	},
	{171, {"FLIP-LEFT",  "OUT",	0}	},
	{172, {"FLIP-LEFT",  "IN",	0}	},
	{173, {"FLIP-LEFT",  "OUT",	0}	},
	{174, {"FLIP-LEFT",  "IN",	0}	},
	{175, {"FLIP-LEFT",  "OUT",	0}	},
	{176, {"FLIP-LEFT",  "IN",	0}	},
	{177, {"FLIP-LEFT",  "OUT",	0}	},
	{178, {"FLIP-LEFT",  "IN",	0}	},
	{179, {"FLIP-LEFT",  "OUT",	0}	},
	{180, {"FLIP-LEFT",  "IN",	0}	},
	{181, {"FLIP-LEFT",  "OUT",	0}	},
	{182, {"FLIP-LEFT",  "IN",	0}	},
	{183, {"FLIP-LEFT",  "OUT",	0}	},
	{184, {"FLIP-LEFT",  "IN",	0}	},
	{185, {"FLIP-LEFT",  "OUT",	0}	},
	{186, {"FLIP-RIGHT", "OUT",	0}	},
	{187, {"FLIP-RIGHT", "IN",	0}	},
	{188, {"FLIP-RIGHT", "OUT",	0}	},
	{189, {"FLIP-RIGHT", "IN",	0}	},
	{190, {"FLIP-RIGHT", "OUT",	0}	},
	{191, {"FLIP-RIGHT", "OUT",	2}	},
	{192, {"FLIP-RIGHT", "IN",	0}	},
	{193, {"FLIP-RIGHT", "OUT",	0}	},
	{194, {"FLIP-RIGHT", "OUT",	0}	},
	{195, {"FLIP-RIGHT", "IN",	0}	},
	{196, {"FLIP-RIGHT", "OUT",	0}	},
	{197, {"FLIP-RIGHT", "IN",	0}	},
	{198, {"FLIP-RIGHT", "OUT",	0}	},
	{199, {"FLIP-RIGHT", "IN",	0}	},
	{200, {"FLIP-RIGHT", "OUT",	0}	},
	{201, {"FLIP-RIGHT", "IN",	0}	},
	{202, {"FLIP-RIGHT", "OUT",	0}	},
	{203, {"FLIP-RIGHT", "IN",	0}	},
	{204, {"FLIP-RIGHT", "OUT",	0}	},
	{205, {"FLIP-RIGHT", "IN",	0}	},
	{206, {"FLIP-RIGHT", "OUT",	0}	},
	{207, {"FLIP-RIGHT", "IN",	0}	},
	{208, {"FLIP-RIGHT", "IN",	0}	},
	{209, {"FLIP-RIGHT", "OUT",	0}	},
	{210, {"FLIP-RIGHT", "OUT",	0}	},
	{211, {"FLIP-RIGHT", "IN",	0}	},
	{212, {"FLIP-RIGHT", "IN",	0}	},
	{213, {"FLIP-RIGHT", "OUT",	0}	},
	{214, {"FLIP-RIGHT", "IN",	0}	},
	{215, {"FLIP-RIGHT", "IN",	0}	},
	{216, {"FLIP-RIGHT", "OUT",	0}	},
	{217, {"FLIP-RIGHT", "OUT",	0}	},
	{218, {"FLIP-RIGHT", "IN",	0}	},
	{219, {"FLIP-RIGHT", "OUT",	0}	},
	{220, {"FLIP-RIGHT", "IN",	0}	},
	{221, {"FLIP-RIGHT", "IN",	0}	},
  // at slugs
	{4000,{"Vertical(UP)", "IN",	0}	},
	{4001,{"Vertical(UP)", "OUT",	0}	},
	{4002,{"Vertical(UP)", "OUT",	0}	},
	{4003,{"Vertical(UP)", "IN",	0}	},
	{4004,{"Vertical(UP)", "IN",	0}	},
	{4005,{"Vertical(UP)", "OUT",	0}	},
	{4006,{"Vertical(UP)", "OUT",	0}	},
	{4007,{"Vertical(UP)", "IN",	0}	},
	{4008,{"Vertical(UP)", "IN",	0}	},
	{4009,{"Vertical(UP)", "OUT",	0}	},
	{4010,{"Vertical(UP)", "IN",	0}	},
	{4011,{"Vertical(UP)", "OUT",	0}	},
	{4012,{"Vertical(UP)", "OUT",	0}	},
	{4013,{"Vertical(UP)", "IN",	0}	},
	{4014,{"Vertical(UP)", "IN",	0}	},
	{4015,{"Vertical(UP)", "OUT",	0}	},
	{4016,{"Vertical(UP)", "IN",	0}	},
	{4017,{"Vertical(UP)", "OUT",	0}	},
	{4018,{"Vertical(UP)", "OUT",	0}	},
	{4019,{"Vertical(UP)", "IN",	0}	},
};
#endif
/* vim: set shiftwidth=2 softtabstop=2 tabstop=2: */
